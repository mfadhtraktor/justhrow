generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions   Session[]
  tokens     Token[]
  workspaces Workspace[]
  contents   Content[]
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Token {
  id        String   @id @default(cuid())
  userId    String
  token     String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Workspace {
  id            String    @id @default(cuid())
  name          String
  userId        String
  willDeletedAt DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  contents Content[]
}

model Content {
  id            String    @id @default(cuid())
  name          String
  url           String
  mimetype      String
  size          String
  willDeletedAt DateTime?
  userId        String
  workspaceId   String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
}
